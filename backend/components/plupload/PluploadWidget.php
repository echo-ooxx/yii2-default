<?php
/**
 * Created by IntelliJ IDEA.
 * User: leezhang
 * Date: 2018/8/21
 * Time: 下午5:18
 */

namespace backend\components\plupload;

use yii\base\Widget;
use yii\web\View;
use Yii;
use yii\web\Request;

class PluploadWidget extends Widget
{

    public $uploadto;
    public $fileSizeLimit;
    public $fileNumLimit;
    public $fileExtLimit;
    public $fileType = 'image';
    public $btText = '新增单品';
    public $inputContainer = '#common_form_container__flex_outter';
    public $name;
    public $value;
    public $hint;
    public $formData;
    public $model;
    public $showQueue = true;
    public $videoDuration = 0;
    public $showCommonQueue = false;

    protected $asset;

    public function init()
    {
        $this->asset = PluploadAsset::register($this->getView());
        if (!is_array($this->value)) {
            if (empty($this->value)) {
                $this->value = [];
            } else {
                $this->value = [$this->value];
            }
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run()
    {

        $request = Yii::$app->getRequest();
        if ($request instanceof Request && $request->enableCsrfValidation) {
            $this->formData[$request->csrfParam] = $request->getCsrfToken();
        }
        $this->name = 'file'.$this->getId();
        $js = $this->renderFile($this->getViewPath() . '/js.php', [
            'id'=>$this->getId(),
            'asseturl' => $this->asset->baseUrl,
            'uploadurl' => $this->uploadto,
            'formData' => $this->formData,
            'fileSizeLimit' => $this->fileSizeLimit,
            'fileNumLimit' => $this->fileNumLimit,
            'fileExtLimit' => $this->fileExtLimit,
            'filetype'=>$this->fileType,
            'name' => $this->name,
            'showQueue' => $this->showQueue,
            'value' => $this->value,
            'inputContainer' => $this->inputContainer,
            'videoDuration' => $this->videoDuration,
            'showCommonQueue' => $this->showCommonQueue
        ]);
        $this->getView()->registerJs($js, View::POS_READY);

        switch ($this->fileType){
            case 'image':
                return $this->renderFile($this->getViewPath() . '/index.php',[
                    'id' => $this->getId(),
                    'imgs' => $this->value,
                    'name' => $this->name,
                    'fileNumLimit' => $this->fileNumLimit,
                    'filetype'=>$this->fileType,
                    'hint'=>$this->hint,
                    'showQueue' => $this->showQueue,
                    'value' => $this->value
                ]);
                break;
            case 'file':
                return $this->renderFile($this->getViewPath() . '/file.php',[
                    'id' => $this->getId(),
                    'imgs' => $this->value,
                    'name' => $this->name,
                    'fileNumLimit' => $this->fileNumLimit,
                    'filetype'=>$this->fileType,
                    'hint'=>$this->hint,
                    'value' => $this->value
                ]);
                break;
            case 'mobile':
                return $this->renderFile($this->getViewPath() . '/mobile.php',[
                    'id' => $this->getId(),
                    'imgs' => $this->value,
                    'name' => $this->name,
                    'fileNumLimit' => $this->fileNumLimit,
                    'filetype'=>$this->fileType,
                    'hint'=>$this->hint,
                    'showQueue' => $this->showQueue,
                    'value' => $this->value
                ]);
                break;
            case 'bt':
                return $this->renderFile($this->getViewPath() . '/bt.php',[
                    'id' => $this->getId(),
                    'imgs' => $this->value,
                    'name' => $this->name,
                    'fileNumLimit' => $this->fileNumLimit,
                    'filetype'=>$this->fileType,
                    'hint'=>$this->hint,
                    'showQueue' => $this->showQueue,
                    'value' => $this->value,
                    'btText' => $this->btText
                ]);
                break;
        }


    }
}